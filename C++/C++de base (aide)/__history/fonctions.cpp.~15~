//---------------------------------------------------------------------------

#pragma hdrstop
#include "main.h"
#include "fonctions.h"
#include <iostream>
#include <conio.h>
using namespace std;
//---------------------------------------------------------------------------
#pragma package(smart_init)

Couleurs::Couleurs(unsigned char * dmxBlock){
	this->dmxBlock =  dmxBlock;
}

Couleurs::~Couleurs(){

}

void Couleurs::Rouge(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=255;
	dmxBlock[2]=0;
	dmxBlock[3]=0;
	dmxBlock[4]=255;
	dmxBlock[5]=255;

}

void Couleurs::Vert(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=0;
	dmxBlock[2]=255;
	dmxBlock[3]=0;
	dmxBlock[4]=255;
	dmxBlock[5]=255;
}

void Couleurs::Bleu(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=0;
	dmxBlock[2]=0;
	dmxBlock[3]=255;
	dmxBlock[4]=255;
	dmxBlock[5]=255;
}

void Couleurs::Blanc(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=0;
	dmxBlock[2]=0;
	dmxBlock[3]=0;
	dmxBlock[4]=255;
	dmxBlock[5]=255;
}

void Couleurs::Stroboscope(){
	for (int i = 0; i < 512; i++) {
	dmxBlock[i]=0;
	}
	dmxBlock[0]=215;
	dmxBlock[1]=255;
	dmxBlock[2]=255;
	dmxBlock[3]=255;
	dmxBlock[4]=255;
	dmxBlock[5]=255;
}

void Couleurs::ON(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=0;
	dmxBlock[2]=0;
	dmxBlock[3]=0;
	dmxBlock[4]=255;
	dmxBlock[5]=255;
}

void Couleurs::OFF(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=0;
	dmxBlock[1]=0;
	dmxBlock[2]=0;
	dmxBlock[3]=0;
	dmxBlock[4]=0;
	dmxBlock[5]=0;
}

void Couleurs::Jaune(){
	for (int i = 0; i < 512; i++) {
		dmxBlock[i]=0;
	}
	dmxBlock[0]=255;
	dmxBlock[1]=122;
	dmxBlock[2]=255;
	dmxBlock[3]=0;
	dmxBlock[4]=230;
	dmxBlock[5]=255;
}

void Couleurs::Fondu(){
    for (int i = 0; i < 512; i++)
		{
			dmxBlock[i]=0;
		}
		dmxBlock[0]=32;
		dmxBlock[4]=0;
		dmxBlock[5]=0xFF;
		//on demarre le fondu

		SendTrame();
		switch(cas)
		{
			case 0:
				v+=2;  //on augmente le vert

				if(v >= 255)
				{
					v = 255;
					cas = 1;
				}
				break;

			case 1:
				 r+= 2; //puis le rouge
				 if(r >= 255)
				 {
					 r = 255;
					 cas = 2;
				 }
				break;

			case 2:
				v-=2;  //puis on enleve le vert
				if(v <= 0)
				{
					v = 0;
					cas = 3;
                }
				break;
			case 3:
				b+=2; //augmente le bleu
				if (b >=255)
				{
					b =255;
					cas = 4;
				}
				break;
			case 4:
				r-=2; //diminue le rouge
				if (r <= 0)
				{
					r = 0;
					cas = 5;
				}
				break;
			case 5:
				v+=2; //reaugmente le vert
				if (v >= 255)
				{
					v = 255;
					cas = 6;
				}
				break;
			case 6:
				r+=2;//reaugmente le rouge
				if (r >= 255)
				{
					r = 255;
					cas = 7;
				}
		}   //on termine avec les 3 couleurs a fond ce qui nous donne du blanc

		dmxBlock[1] = r;
		dmxBlock[2] = v;
		dmxBlock[3] = b;

}



